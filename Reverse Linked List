Reverse Linked List
Easy

Reverse a singly linked list.

Example:

Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL
Follow up:

A linked list can be reversed either iteratively or recursively. Could you implement both?

---

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode prev=null;
        
        while(head!=null)
        {ListNode next=head.next;
            head.next=prev;
            prev=head;
            head=next;
        }
        
        return prev;
    }
}

---------

Runtime: 0 ms, faster than 100.00% of Java online submissions for Reverse Linked List.
Memory Usage: 39.1 MB, less than 87.44% of Java online submissions for Reverse Linked List.
Next challenges:
Reverse Linked List II
Binary Tree Upside Down
Palindrome Linked List
