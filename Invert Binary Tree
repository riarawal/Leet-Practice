226. Invert Binary Tree
Easy

3532

57

Add to List

Share
Invert a binary tree.

Example:

Input:

     4
   /   \
  2     7
 / \   / \
1   3 6   9
Output:

     4
   /   \
  7     2
 / \   / \
9   6 3   1

----------

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root==null)
        {
            return root;
        }
        
        TreeNode right=invertTree(root.right);
        TreeNode left=invertTree(root.left);
        
        root.right=left;
        root.left=right;
        
        return root;
    }
}


-----------

Success
Details 
Runtime: 0 ms, faster than 100.00% of Java online submissions for Invert Binary Tree.
Memory Usage: 37.1 MB, less than 57.12% of Java online submissions for Invert Binary Tree.
Next challenges:
Lowest Common Ancestor of a Binary Tree
Diameter of Binary Tree
Search in a Binary Search Tree
